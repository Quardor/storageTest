plugins {
    id 'java'
    id 'com.github.johnrengelman.shadow' version '7.0.0' // Добавление плагина shadow
}
group = 'ru.quard0r'
version = '1.0'

repositories {
    mavenCentral()
    maven {
        name = "papermc-repo"
        url = "https://repo.papermc.io/repository/maven-public/"
    }
    maven {
        name = "sonatype"
        url = "https://oss.sonatype.org/content/groups/public/"
    }
    maven {
        name = "ZW-Utils-mvn-repo"
        url = "https://raw.github.com/zwanter/ZW-Utils/mvn-repo/"
    }
}

dependencies {
    compileOnly("io.papermc.paper:paper-api:1.20.1-R0.1-SNAPSHOT")
    compileOnly(group:'org.xerial', name:'sqlite-jdbc', version: '3.41.2.2')

    compileOnly('org.projectlombok:lombok:1.18.36')
    annotationProcessor('org.projectlombok:lombok:1.18.36')

    testCompileOnly('org.projectlombok:lombok:1.18.36')
    testAnnotationProcessor('org.projectlombok:lombok:1.18.36')

    implementation group: 'io.github.wf4java', name: 'WF-BukkitUtils', version: '3.2.0'
    implementation("ru.zwanter:ZW-Utils:0.6")
}

def targetJavaVersion = 17
java {
    def javaVersion = JavaVersion.toVersion(targetJavaVersion)
    sourceCompatibility = javaVersion
    targetCompatibility = javaVersion
    if (JavaVersion.current() < javaVersion) {
        toolchain.languageVersion = JavaLanguageVersion.of(targetJavaVersion)
    }
}

tasks.withType(JavaCompile).configureEach {
    options.encoding = 'UTF-8'

    if (targetJavaVersion >= 10 || JavaVersion.current().isJava10Compatible()) {
        options.release.set(targetJavaVersion)
    }
}

tasks.withType(JavaCompile).configureEach {
    options.encoding = 'UTF-8'
    if (targetJavaVersion >= 10 || JavaVersion.current().isJava10Compatible()) {
        options.release.set(targetJavaVersion)
    }
}

tasks.withType(Jar) {
    archiveBaseName.set("your-plugin-name")
    archiveVersion.set(version)
}

tasks.shadowJar {
    archiveBaseName.set("your-plugin-name")
    archiveVersion.set(version)
}

processResources {
    def props = [version: version]
    inputs.properties props
    filteringCharset 'UTF-8'
    filesMatching('plugin.yml') {
        expand props
    }
}